// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: coin.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *SymbolRequest) Reset() {
	*x = SymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRequest) ProtoMessage() {}

func (x *SymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRequest.ProtoReflect.Descriptor instead.
func (*SymbolRequest) Descriptor() ([]byte, []int) {
	return file_coin_proto_rawDescGZIP(), []int{0}
}

func (x *SymbolRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type IdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *IdsRequest) Reset() {
	*x = IdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsRequest) ProtoMessage() {}

func (x *IdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsRequest.ProtoReflect.Descriptor instead.
func (*IdsRequest) Descriptor() ([]byte, []int) {
	return file_coin_proto_rawDescGZIP(), []int{1}
}

func (x *IdsRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type CoinQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *CoinQueryRequest) Reset() {
	*x = CoinQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinQueryRequest) ProtoMessage() {}

func (x *CoinQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinQueryRequest.ProtoReflect.Descriptor instead.
func (*CoinQueryRequest) Descriptor() ([]byte, []int) {
	return file_coin_proto_rawDescGZIP(), []int{2}
}

func (x *CoinQueryRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CoinQueryRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type CoinPaginate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins *CoinList `protobuf:"bytes,1,opt,name=coins,proto3" json:"coins,omitempty"`
	Limit int64     `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *CoinPaginate) Reset() {
	*x = CoinPaginate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinPaginate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinPaginate) ProtoMessage() {}

func (x *CoinPaginate) ProtoReflect() protoreflect.Message {
	mi := &file_coin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinPaginate.ProtoReflect.Descriptor instead.
func (*CoinPaginate) Descriptor() ([]byte, []int) {
	return file_coin_proto_rawDescGZIP(), []int{3}
}

func (x *CoinPaginate) GetCoins() *CoinList {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *CoinPaginate) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CoinPaginate) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type CoinList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins []*Coin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
}

func (x *CoinList) Reset() {
	*x = CoinList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinList) ProtoMessage() {}

func (x *CoinList) ProtoReflect() protoreflect.Message {
	mi := &file_coin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinList.ProtoReflect.Descriptor instead.
func (*CoinList) Descriptor() ([]byte, []int) {
	return file_coin_proto_rawDescGZIP(), []int{4}
}

func (x *CoinList) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt string  `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string  `protobuf:"bytes,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Type      int32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Price     float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Symbol    string  `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name      string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Icon      string  `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	Id        string  `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_coin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_coin_proto_rawDescGZIP(), []int{5}
}

func (x *Coin) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Coin) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Coin) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Coin) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Coin) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Coin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coin) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Coin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_coin_proto protoreflect.FileDescriptor

var file_coin_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x27, 0x0a, 0x0d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x10, 0x43, 0x6f, 0x69, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x0c, 0x43, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x6f,
	0x69, 0x6e, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x32, 0xcd, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coin_proto_rawDescOnce sync.Once
	file_coin_proto_rawDescData = file_coin_proto_rawDesc
)

func file_coin_proto_rawDescGZIP() []byte {
	file_coin_proto_rawDescOnce.Do(func() {
		file_coin_proto_rawDescData = protoimpl.X.CompressGZIP(file_coin_proto_rawDescData)
	})
	return file_coin_proto_rawDescData
}

var file_coin_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_coin_proto_goTypes = []any{
	(*SymbolRequest)(nil),    // 0: coin.SymbolRequest
	(*IdsRequest)(nil),       // 1: coin.IdsRequest
	(*CoinQueryRequest)(nil), // 2: coin.CoinQueryRequest
	(*CoinPaginate)(nil),     // 3: coin.CoinPaginate
	(*CoinList)(nil),         // 4: coin.CoinList
	(*Coin)(nil),             // 5: coin.Coin
	(*IdRequest)(nil),        // 6: common.IdRequest
}
var file_coin_proto_depIdxs = []int32{
	4, // 0: coin.CoinPaginate.coins:type_name -> coin.CoinList
	5, // 1: coin.CoinList.coins:type_name -> coin.Coin
	2, // 2: coin.CoinService.Paginate:input_type -> coin.CoinQueryRequest
	1, // 3: coin.CoinService.GetByIds:input_type -> coin.IdsRequest
	6, // 4: coin.CoinService.GetById:input_type -> common.IdRequest
	0, // 5: coin.CoinService.GetBySymbol:input_type -> coin.SymbolRequest
	3, // 6: coin.CoinService.Paginate:output_type -> coin.CoinPaginate
	4, // 7: coin.CoinService.GetByIds:output_type -> coin.CoinList
	5, // 8: coin.CoinService.GetById:output_type -> coin.Coin
	5, // 9: coin.CoinService.GetBySymbol:output_type -> coin.Coin
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_coin_proto_init() }
func file_coin_proto_init() {
	if File_coin_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_coin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coin_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*IdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coin_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CoinQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coin_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CoinPaginate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coin_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CoinList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coin_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coin_proto_goTypes,
		DependencyIndexes: file_coin_proto_depIdxs,
		MessageInfos:      file_coin_proto_msgTypes,
	}.Build()
	File_coin_proto = out.File
	file_coin_proto_rawDesc = nil
	file_coin_proto_goTypes = nil
	file_coin_proto_depIdxs = nil
}
